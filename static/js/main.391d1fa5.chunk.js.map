{"version":3,"sources":["components/Header.jsx","components/Loader.jsx","components/Card.jsx","components/SearchFIlter.jsx","views/Home.jsx","views/SingleCountry.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","handleDark","isDarkMode","className","onClick","Loader","Card","info","name","population","region","capital","flags","to","toLowerCase","replace","src","alt","SearchFilter","handleFilter","useState","country","filters","setFilters","handleChange","e","target","value","type","id","placeholder","onChange","hidden","preventDefault","Home","countries","resultsSearch","setResultSearch","Fragment","filter","item","includes","length","map","index","SingleCountry","useParams","countryInfo","setCOuntryInfo","history","useHistory","useEffect","push","nativeName","subregion","topLevelDomain","currencies","symbol","languages","borders","alpha3Code","App","setCountries","setDarkMode","axios","get","then","response","data","catch","error","console","log","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.391d1fa5.chunk.js","sourcesContent":["import React from \"react\";\nimport { MoonIcon } from \"@heroicons/react/solid\";\nimport { MoonIcon as Moon } from \"@heroicons/react/outline\";\n\nconst Header = (props) => {\n  const { handleDark, isDarkMode } = props;\n  return (\n    <header className={isDarkMode ? \"bg-dark_header\" : \"bg-light_header\"}>\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid grid-cols-2 min-h-header\">\n          <div className=\"flex items-center\">\n            <p\n              className={`${\n                isDarkMode ? \"text-white\" : \"text-black\"\n              } font-nunito font-bold text-base`}\n            >\n              Where in the world?\n            </p>\n          </div>\n          <div className=\"flex justify-end items-center\">\n            <button\n              onClick={() => handleDark()}\n              className={`${\n                isDarkMode ? \"text-white\" : \"text-black\"\n              } flex items-center font-nunito font-semibold text-sm`}\n            >\n              {isDarkMode ? (\n                <MoonIcon className=\"text-white h-6 w-6 pr-2\" />\n              ) : (\n                <Moon className=\"text-black h-6 w-6 pr-2\" />\n              )}\n              Dark Mode\n            </button>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div className=\"lds-ring\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Card = (props) => {\n  const { name, population, region, capital, flags } = props.info;\n  return (\n    <Link to={`/single-country/${name.toLowerCase().replace(/\\s/g, \"\")}`}>\n      <div className=\"card flex justify-center\">\n        <div\n          className={`${\n            props.isDarkMode ? \"bg-dark_header\" : \"bg-light_header\"\n          }  w-3/4 lg:w-full`}\n        >\n          <div className=\"min-h-card\">\n            <img src={flags[0]} alt=\"flag\" />\n          </div>\n          <div className=\"p-3\">\n            <p className=\"font-nunito font-bold\">{name}</p>\n            <p className=\"font-nunito font-semibold\">\n              Population: <span className=\"font-light\">{population}</span>\n            </p>\n            <p className=\"font-nunito font-semibold\">\n              Region: <span className=\"font-light\">{region}</span>\n            </p>\n            <p className=\"font-nunito font-semibold\">\n              Capital: <span className=\"font-light\">{capital}</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport { SearchIcon } from \"@heroicons/react/solid\";\n\nconst SearchFilter = (props) => {\n  const { handleFilter, isDarkMode } = props;\n  const [filters, setFilters] = useState({\n    country: \"\",\n    region: \"\",\n  });\n  const handleChange = (e) => {\n    setFilters({\n      ...filters,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleClick = (e) => {\n    e.preventDefault();\n    handleFilter(filters.country, filters.region);\n  };\n  return (\n    <div\n      className={`${\n        isDarkMode ? \"text-white\" : \"text-black\"\n      } container mx-auto px-4`}\n    >\n      <form>\n        <div className=\"grid grid-cols-1\">\n          <div className=\"mt-5 flex flex-col md:flex-row justify-center\">\n            <input\n              type=\"text\"\n              name=\"country\"\n              id=\"country\"\n              placeholder=\"Search for a country...\"\n              className={`${\n                isDarkMode ? \"bg-dark_header\" : \"bg-light_header\"\n              } py-3 pl-3 mr-2 mt-2 font-nunito`}\n              value={filters.country}\n              onChange={handleChange}\n            />\n\n            <select\n              className={`${\n                isDarkMode ? \"bg-dark_header\" : \"bg-light_header\"\n              } mr-2 mt-2 py-3 px-4 font-nunito font-light`}\n              name=\"region\"\n              id=\"region\"\n              value={filters.region}\n              onChange={handleChange}\n            >\n              <option hidden>Filter by Region</option>\n              <option value=\"Africa\">Africa</option>\n              <option value=\"Americas\">America</option>\n              <option value=\"Asia\">Asia</option>\n              <option value=\"Europe\">Europe</option>\n              <option value=\"Oceania\">Oceania</option>\n              <option value=\"All\">All</option>\n            </select>\n\n            <button\n              onClick={handleClick}\n              className={`${\n                isDarkMode ? \"bg-dark_header\" : \"bg-light_header\"\n              } py-3 mt-2 w-3/12 md:w-20`}\n              type=\"submit\"\n            >\n              <SearchIcon className=\" h-5 w-20\" />\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"flex  font-nunito mt-3\">\n        <p className=\"font-semibold mr-2\">Filtering by:</p>\n        {filters.country !== \"\" ? (\n          <p\n            className={`${\n              isDarkMode ? \"bg-dark_header\" : \"bg-light_header\"\n            } mr-2 px-2 rounded-sm`}\n          >\n            {filters.country}\n          </p>\n        ) : null}\n        {filters.region !== \"\" ? (\n          <p\n            className={`${\n              isDarkMode ? \"bg-dark_header\" : \"bg-light_header\"\n            } mr-2 px-2 rounded-sm`}\n          >\n            {filters.region}\n          </p>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchFilter;\n","import React, { useState } from \"react\";\nimport Card from \"../components/Card\";\nimport SearchFilter from \"../components/SearchFIlter\";\n\nconst Home = (props) => {\n  const { countries, isDarkMode } = props;\n  const [resultsSearch, setResultSearch] = useState(countries);\n  const handleFilter = (country, region) => {\n    setResultSearch(\n      countries\n        .filter((item) =>\n          region !== \"All\" && region !== \"\"\n            ? item.region === region\n            : item.region.includes(\"\")\n        )\n        .filter((item) =>\n          country !== \"\"\n            ? item.name.toLowerCase().replace(/\\s/g, \"\") ===\n              country.toLowerCase().replace(/\\s/g, \"\")\n            : item.name.includes(\"\")\n        )\n    );\n  };\n  return (\n    <React.Fragment>\n      <SearchFilter handleFilter={handleFilter} isDarkMode={isDarkMode} />\n      <div\n        className={`${\n          isDarkMode ? \"text-white\" : \"text-black\"\n        } container mx-auto py-5 min-h-main`}\n      >\n        <p className=\"px-4 my-5 font-nunito font-semibold\">\n          Results: {resultsSearch.length}\n        </p>\n        <div className=\"grid gap-12 grid-cols-1 md:grid-cols-2 lg:grid-cols-4 px-4\">\n          {resultsSearch.map((item, index) => (\n            <Card key={index} info={item} isDarkMode={isDarkMode} />\n          ))}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { ArrowNarrowLeftIcon } from \"@heroicons/react/solid\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nconst SingleCountry = (props) => {\n  const { countries, isDarkMode } = props;\n  const { name } = useParams();\n  const [countryInfo, setCOuntryInfo] = useState([]);\n  const history = useHistory();\n  const handleBack = () => {\n    history.push(\"/\");\n  };\n\n  useEffect(() => {\n    setCOuntryInfo(\n      countries.filter(\n        (item) => item.name.toLowerCase().replace(/\\s/g, \"\") === name\n      )\n    );\n  }, [countries, name]);\n\n  return (\n    <div\n      className={`${\n        isDarkMode ? \"text-white\" : \"text-black\"\n      } container mx-auto py-5 px-4 min-h-main font-nunito`}\n    >\n      <div className=\"my-10\">\n        <button\n          onClick={handleBack}\n          className={`${\n            isDarkMode ? \"bg-dark_header\" : \"bg-light_header\"\n          } flex items-center px-8 py-2 font-nunito font-light`}\n        >\n          <ArrowNarrowLeftIcon className=\"h-5 y-5 pr-2\" />\n          Back\n        </button>\n      </div>\n      {countryInfo.length > 0 ? (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-5\">\n          <div>\n            <img src={countryInfo[0].flags[0]} alt=\"flag\" />\n          </div>\n\n          <div className=\"flex items-center justify-center\">\n            <div className=\"w-full lg:w-4/5\">\n              <p className=\"font-bold text-3xl\">{countryInfo[0].name}</p>\n              <div className=\"flex justify-between  my-10\">\n                <div>\n                  <p className=\"font-semibold\">\n                    Native Name:{\" \"}\n                    <span className=\"font-light\">\n                      {countryInfo[0].nativeName}\n                    </span>\n                  </p>\n                  <p className=\"font-semibold\">\n                    Population:{\" \"}\n                    <span className=\"font-light\">\n                      {countryInfo[0].population}\n                    </span>\n                  </p>\n                  <p className=\"font-semibold\">\n                    Region:{\" \"}\n                    <span className=\"font-light\">{countryInfo[0].region}</span>\n                  </p>\n                  <p className=\"font-semibold\">\n                    Sub Region:{\" \"}\n                    <span className=\"font-light\">\n                      {countryInfo[0].subregion}\n                    </span>\n                  </p>\n                  <p className=\"font-semibold\">\n                    Capital:{\" \"}\n                    <span className=\"font-light\">{countryInfo[0].capital}</span>\n                  </p>\n                </div>\n                <div>\n                  <p className=\"font-semibold\">\n                    Top Level Domain:{\" \"}\n                    <span className=\"font-light\">\n                      {countryInfo.topLevelDomain}\n                    </span>\n                  </p>\n                  <p className=\"font-semibold\">\n                    Currencies:{\" \"}\n                    <span className=\"font-light\">\n                      {countryInfo[0].currencies[0].name},\n                      {countryInfo[0].currencies[0].symbol}\n                    </span>\n                  </p>\n                  <p className=\"font-semibold\">\n                    Languages:{\" \"}\n                    <span className=\"font-light\">\n                      {countryInfo[0].languages.map((item) => item.name)}\n                    </span>\n                  </p>\n                </div>\n              </div>\n              <div className=\"w-full\">\n                <p className=\"font-semibold mb-2\">Border Countries:</p>\n                {countryInfo[0].borders.map((item, index) => {\n                  let borders = countries.filter(\n                    (country) => country.alpha3Code === item\n                  );\n                  return (\n                    <button key={index} className=\"mr-1 mb-3\">\n                      <Link\n                        to={`/single-country/${borders[0].name\n                          .toLowerCase()\n                          .replace(/\\s/g, \"\")}`}\n                        className={`${\n                          isDarkMode ? \"bg-dark_header\" : \"bg-light_header\"\n                        } py-1 px-3 `}\n                      >\n                        {borders[0].name}\n                      </Link>\n                    </button>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default SingleCountry;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport Header from \"./components/Header\";\nimport Loader from \"./components/Loader\";\nimport Home from \"./views/Home\";\nimport SingleCountry from \"./views/SingleCountry\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [isDarkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    axios\n      .get(\"https://restcountries.com/v2/all\")\n      .then((response) => {\n        setCountries(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n  const handleDark = () => {\n    setDarkMode(!isDarkMode);\n  };\n  return (\n    <div className=\"App\">\n      <Header handleDark={handleDark} isDarkMode={isDarkMode} />\n      {countries.length > 0 ? (\n        <main className={isDarkMode ? \"bg-dark_main\" : \"bg-light_main\"}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home countries={countries} isDarkMode={isDarkMode} />\n            </Route>\n            <Route exact path=\"/single-country/:name\">\n              <SingleCountry countries={countries} isDarkMode={isDarkMode} />\n            </Route>\n          </Switch>\n        </main>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}